// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: profile.sql

package generated

import (
	"context"

	"github.com/google/uuid"
)

const insertUserProfileById = `-- name: InsertUserProfileById :one
INSERT INTO user_profiles (id, first_name, last_name, created_at, updated_at)
VALUES ($1, $2, $3, NOW(), NOW())
RETURNING id, first_name, last_name
`

type InsertUserProfileByIdParams struct {
	ID        uuid.UUID `json:"id"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
}

type InsertUserProfileByIdRow struct {
	ID        uuid.UUID `json:"id"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
}

// for seeding
func (q *Queries) InsertUserProfileById(ctx context.Context, arg InsertUserProfileByIdParams) (InsertUserProfileByIdRow, error) {
	row := q.db.QueryRow(ctx, insertUserProfileById, arg.ID, arg.FirstName, arg.LastName)
	var i InsertUserProfileByIdRow
	err := row.Scan(&i.ID, &i.FirstName, &i.LastName)
	return i, err
}
