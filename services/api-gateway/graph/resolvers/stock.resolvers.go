package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fafnir/api-gateway/graph/model"
	"fmt"
)

// GetStockMetadata is the resolver for the getStockMetadata field.
func (r *queryResolver) GetStockMetadata(ctx context.Context, symbol string) (*model.StockMetadataResponse, error) {
	resp, err := r.StockClient.GetStockMetadata(ctx, symbol)
	if err != nil {
		return nil, fmt.Errorf("failed to get stock metadata: %w", err)
	}

	return &model.StockMetadataResponse{
		Code: resp.Code,
		Data: resp.Data,
	}, nil
}

// GetStockQuote is the resolver for the getStockQuote field.
func (r *queryResolver) GetStockQuote(ctx context.Context, symbol string) (*model.StockQuoteResponse, error) {
	resp, err := r.StockClient.GetStockQuote(ctx, symbol)
	if err != nil {
		return nil, fmt.Errorf("failed to get stock quote: %w", err)
	}

	return &model.StockQuoteResponse{
		Code: resp.Code,
		Data: resp.Data,
	}, nil
}

// GetStockHistoricalData is the resolver for the getStockHistoricalData field.
func (r *queryResolver) GetStockHistoricalData(ctx context.Context, symbol string, period *string) (*model.StockHistoricalDataResponse, error) {
	resp, err := r.StockClient.GetStockHistoricalData(ctx, symbol, *period)
	if err != nil {
		return nil, fmt.Errorf("failed to get stock historical data: %w", err)
	}

	return &model.StockHistoricalDataResponse{
		Code: resp.Code,
		Data: resp.Data,
	}, nil
}
